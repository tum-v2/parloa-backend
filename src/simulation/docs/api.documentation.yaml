openapi: 3.0.0
info:
  title: API
  version: 1.0.0
tags:
  - name: Authentication
  - name: Dashboard
  - name: Simulation
  - name: Agent
  - name: Goal
  - name: Chat
  - name: LLMs
  - name: Optimization
  - name: Prompt
paths:
  /api/v1/auth/login:
    post:
      summary: Log in
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessCode:
                  type: string
                  example: 2986637656
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/dashboard:
    get:
      summary: Dashboard
      tags: [Dashboard]
      parameters:
        - in: query
          name: days
          schema:
            type: number
            example: 10
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  interactions:
                    type: number
                    example: 154
                  simulationsRuns:
                    type: number
                    example: 23
                  successRate:
                    type: number
                    example: 0.8806811619311619
                  simulationGraphData:
                    type: array
                    items: 
                      type: object
                      properties:
                        id:
                          type: string
                          example: 6553a127fcad73273655d634
                        successRate:
                          type: number
                          example: 0.8806811619311619
                        date:
                          type: number
                          example: 1702068485850
                  top10Simulations:
                    type: array
                    items:
                      oneOf:
                        - $ref: "#/components/schemas/DashboardSimulation"
                        - $ref: "#/components/schemas/DashboardSimulation"
                        - $ref: "#/components/schemas/DashboardSimulation"
                        - $ref: "#/components/schemas/DashboardSimulation"
                        - $ref: "#/components/schemas/DashboardSimulation"
                        - $ref: "#/components/schemas/DashboardSimulation"
                        - $ref: "#/components/schemas/DashboardSimulation"
                        - $ref: "#/components/schemas/DashboardSimulation"
                        - $ref: "#/components/schemas/DashboardSimulation"
                        - $ref: "#/components/schemas/DashboardSimulation"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: BAD_REQUEST
                  message:
                    type: string
                    example: Bad request
                  details:
                    type: string
                    example: "Please provide a number of days: e.g. ?days=10"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/simulations:
    get:
      summary: Retrieve all simulations
      tags: [Simulation]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SimulationDocument"
        500:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
    post:
      summary: Start new automated simulation
      tags: [Simulation]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunSimulationRequest"
      responses:
        201:
          description: Simulation successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseRunSimulation"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid simulation ID."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/simulations/{simulationId}:
    get:
      summary: Retrieve simulation
      tags: [Simulation]
      parameters:
        - in: path
          name: simulationId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimulationDocument"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid simulation ID."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Simulation 1 not found!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
    put:
      summary: Update simulation
      tags: [Simulation]
      parameters:
        - in: path
          name: simulationId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Simulation 3
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimulationDocument"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid simulation ID."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Simulation 1 not found!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
    delete:
      summary: Delete simulation
      tags: [Simulation]
      parameters:
        - in: path
          name: simulationId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      responses:
        204:
          description: OK
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid simulation ID."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Simulation 1 not found!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/simulations/ab-testing:
    post:
      summary: Start new A/B simulation
      tags: [Simulation]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ABSimulationRequest"
      responses:
        201:
          description: Simulation successfully created
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/ResponseRunSimulation"
                    - $ref: "#/components/schemas/ResponseRunSimulation"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid simulation ID."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/simulations/conversations/{conversationId}:
    get:
      summary: Retrieve simulation conversations
      tags: [Simulation]
      parameters:
        - in: path
          name: conversationId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversationResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid conversation ID."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Conversation 1 not found!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/agents:
    post:
      summary: Create a new agent
      description: Endpoint to create a new agent.
      tags: [Agent]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceAgent"
      responses:
        201:
          description: Chat started successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid agent name."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
    get:
      summary: Retrieve all agents
      tags: [Agent]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AgentResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/agents/{agentId}:
    get:
      summary: Get agent
      tags: [Agent]
      parameters:
        - in: path
          name: agentId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid agent ID."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Agent 1 not found!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
    put:
      summary: Update agent
      tags: [Agent]
      parameters:
        - in: path
          name: agentId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                llm:
                  type: string
                  example: LLAMA2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid agent ID."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Agent 1 not found!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
    delete:
      summary: Delete agent
      tags: [Agent]
      parameters:
        - in: path
          name: agentId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      responses:
        204:
          description: OK
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid agent ID."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Agent 1 not found!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/goals:
    get:
      summary: Retrieve all goals
      tags: [Goal]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GoalDocument"
    post:
      summary: Create a new goal
      description: Endpoint to create a new goal.
      tags: [Goal]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoalRequest"
      responses:
        201:
          description: Goal created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoalDocument"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Scenarios must be a valid, non-empty array."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/goals/{goalId}:
    get:
      summary: Get goal
      tags: [Goal]
      parameters:
        - in: path
          name: goalId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoalDocument"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Scenarios must be a valid, non-empty array."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Goal 1 not found!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
    put:
      summary: Update goal
      tags: [Goal]
      parameters:
        - in: path
          name: goalId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoalRequest"
      responses:
        200:
          description: Goal updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoalDocument"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Scenarios must be a valid, non-empty array."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Goal 1 not found!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
    delete:
      summary: Delete goal
      tags: [Goal]
      parameters:
        - in: path
          name: goalId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      responses:
        204:
          description: OK
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid goal ID."
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Goal 1 not found!"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/chats:
    get:
      summary: Retrieve all chats
      description: Endpoint for fething all simulations.
      tags: [Chat]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ChatResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
    post:
      summary: Start a new chat
      description: Endpoint to start a new manual chat.
      tags: [Chat]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Chat 3"
                agentConfig:
                  $ref: "#/components/schemas/ServiceAgent"
      responses:
        200:
          description: Chat started successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid chat name."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/chats/{chatId}:
    get:
      summary: Load previous chat
      description: Endpoint for loading a previous chat.
      tags: [Chat]
      parameters:
        - in: path
          name: chatId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/AgentMessage"
                    - $ref: "#/components/schemas/UserMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid chat ID."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
    post:
      summary: Send a message
      description: Endpoint for sending a message manual chat.
      tags: [Chat]
      parameters:
        - in: path
          name: chatId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentMessage"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid chat ID."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/language-models:
    get:
      summary: Retrive available LLM models
      tags: [LLMs]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum:
                    - GPT4
                    - LLAMA2
              example:
                - GPT4
                - LLAMA2
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/optimizations:
    post:
      summary: Start a new optimization
      tags: [ Optimization ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OptimizationRequest"
      responses:
        201:
          description: Optimization successfully initiated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OptimizationDocument"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid simulation name."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
                    
  /api/v1/optimizations/{optimizationId}:
    get:
      summary: Get child simulations that belong to an optimized simulation
      tags: [ Optimization ]
      parameters:
        - in: path
          name: optimizationId
          required: true
          schema:
            type: string
            example: 6553a127fcad73273655d634
      responses:
        201:
          description: Child simulations successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example: ["6553a127fcad73273655d634"]
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "VALIDATION_ERROR"
                      message:
                        type: string
                        example: "API Input Validation failed"
                      errors:
                        type: array
                        items:
                          type: string
                        example:
                          - "Invalid simulation id."
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: INTERNAL_SERVER_ERROR
                  message:
                    type: string
                    example: Internal server error occurred
                  details:
                    type: string
                    example: Error
  /api/v1/prompts:
    get:
      summary: Load promts for specific agent
      tags: [Prompt]
      parameters:
        - name: domain
          in: query
          schema:
            type: string
            example: FLIGHT
        - name: agentType
          in: query
          schema:
            type: string
            example: SERVICE
      responses:
        200:
          description: OK  
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Agent type USER1 not found!"
components:
  schemas:
    RunSimulationRequest:
      type: object
      properties:    
        type:
          type: string
          example: "AUTOMATED"
        name:
          type: string
          example: "Test Simulation"
        description:
          type: string
          example: "Nth Simulation run by me"
        numConversations:
          type: number
          example: 1
        userAgentConfig:
          type: object
          properties:
            name:
              type: string
              example: "Temp user agent"
            domain:
              type: string
              example: "FLIGHT"
            llm:
              type: string
              example: "FAKE"
            type:
              type: string
              example: "USER"
            goal:
              type: string
              example: "658ae7f7226062a81c0d6d06"
            temperature:
              type: number
              example: 0
            maxTokens:
              type: number
              example: 256
            prompt:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/RoleUserAgent"
                  - $ref: "#/components/schemas/PersonaUserAgent"
                  - $ref: "#/components/schemas/ConversationStrategyUserAgent"
        serviceAgentConfig:
          type: object
          properties:
            name:
              type: string
              example: "Temp service agent"
            domain:
              type: string
              example: "FLIGHT"
            llm:
              type: string
              example: "FAKE"
            type:
              type: string
              example: "SERVICE"
            temperature:
              type: number
              example: 0
            maxTokens:
              type: number
              example: 256
            prompt:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/WelcomeMessage"
                  - $ref: "#/components/schemas/RoleServiceAgent"
                  - $ref: "#/components/schemas/PersonaUserAgent"
                  - $ref: "#/components/schemas/ConversationStrategyUserAgent"
                  - $ref: "#/components/schemas/TasksServiceAgent"
                  - $ref: "#/components/schemas/ToolsServiceAgent"
    ServiceAgent:
      type: object
      properties:
        domain:
          type: string
          example: "FLIGHT"
        name:
          type: string
          example: "TEST SERVICE AGENT"
        type:
            type: string
            example: "SERVICE"
        llm:
          type: string
          example: "FAKE"
        temperature:
          type: number
          example: 0
        maxTokens:
          type: number
          example: 256
        prompt:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/WelcomeMessage"
              - $ref: "#/components/schemas/RoleServiceAgent"
              - $ref: "#/components/schemas/PersonaUserAgent"
              - $ref: "#/components/schemas/ConversationStrategyUserAgent"
              - $ref: "#/components/schemas/TasksServiceAgent"
              - $ref: "#/components/schemas/ToolsServiceAgent"
    UserAgent:
      type: object
      properties:
        domain:
          type: string
          example: "FLIGHT"
        name:
          type: string
          example: "TEST USER AGENT"
        type:
            type: string
            example: "USER"
        llm:
          type: string
          example: "FAKE"
        temperature:
          type: number
          example: 0
        maxTokens:
          type: number
          example: 256
        prompt:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/RoleUserAgent"
              - $ref: "#/components/schemas/PersonaUserAgent"
              - $ref: "#/components/schemas/ConversationStrategyUserAgent"
        goal:
          type: string
          example: "657f2a8b8f82c4cd43c674f7"
    SimulationDocument:
      type: object
      properties:
        _id:
          type: string
          example: "657eb671b13d02ce6fa88fea"
        type:
          type: string
          example: "AUTOMATED"
        name:
          type: string
          example: "GENERATED2"
        numConversations:
          type: number
          example: 1
        userAgent:
          type: string
          example: "657eb671b13d02ce6fa88fe8"
        serviceAgent:
          type: string
          example: "657eb671b13d02ce6fa88fe6"
        conversations:
          type: array
          items:
            type: string
            example: "657eb671b13d02ce6fa88fed"
        status:
          type: string
          example: "FINISHED"
        optimization:
          type: object
          example: null
        duration:
          type: number
          example: 1.815
        totalNumberOfInteractions:
          type: number
          example: 12
        createdAt:
          type: string
          example: "2023-12-17T08:50:57.696Z"
        updatedAt:
          type: string
          example: "2023-12-17T08:50:59.528Z"
        __v:
          type: number
          example: 0
        evaluation:
          type: string
          example: "657eb673b13d02ce6fa89045"
    ConversationResponse:
      type: object
      properties:
        _id:
          type: string
          example: "657eeee34f42a14928828083"
        startTime:
          type: string
          example: "2023-12-17T12:51:47.900Z"
        endTime:
          type: string
          example: "2023-12-17T12:51:49.494Z"
        status:
          type: string
          example: "FINISHED"
        messages:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/AgentMessage"
              - $ref: "#/components/schemas/UserMessage"
    AgentMessage:
      type: object
      properties:
        sender:
          type: string
          example: "AGENT"
        text:
          type: string
          example: "Hello, I'm an agent from KronosJet. How can I help you?"
        timestamp:
          type: string
          example: "2023-12-17T12:51:47.906Z"
        userCanReply:
          type: boolean
          example: true
    UserMessage:
      type: object
      properties:
        sender:
          type: string
          example: "USER"
        text:
          type: string
          example: "Hello, I want to change my flight"
        timestamp:
          type: string
          example: "2023-12-17T12:51:47.906Z"
        userCanReply:
          type: boolean
          example: false
    AgentResponse:
      type: object
      properties:
        name:
          type: string
          example: "TEST SERVICE AGENT"
        type:
          type: string
          example: "SERVICE"
        llm:
          type: string
          example: "FAKE"
        temperature:
          type: number
          example: 0
        maxTokens:
          type: number
          example: 256
        domain:
          type: string
          example: "FLIGHT"
        prompt:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/WelcomeMessage"
              - $ref: "#/components/schemas/RoleServiceAgent"
              - $ref: "#/components/schemas/PersonaUserAgent"
              - $ref: "#/components/schemas/ConversationStrategyUserAgent"
              - $ref: "#/components/schemas/TasksServiceAgent"
              - $ref: "#/components/schemas/ToolsServiceAgent"
        temporary:
          type: boolean
          example: false
        _id:
          type: string
          example: "657f281a749e8b0ad34aea99"
        createdAt:
          type: string
          example: "2023-12-17T16:55:54.567Z"
        updatedAt:
          type: string
          example: "2023-12-17T16:55:54.567Z"
        __v:
          type: number
          example: 0
    OptimizationDocument:
      type: object
      properties:
        _id:
          type: string
          example: 6553a127fcad73273655d634
        baseSimulation:
          type: string
          example: 6553a127fcad73273655d634
        childSimulations:
          type: array
          items:
            type: string
          example: []
    ResponseRunSimulation:
      type: object
      properties:
        type:
          type: string
          example: "AUTOMATED"
        name:
          type: string
          example: "GENERATED2"
        numConversations:
          type: number
          example: 1
        userAgent:
          type: object
          properties:
            name:
              type: string
              example: "TEST USER AGENT"
            type:
              type: string
              example: "USER"
            llm:
              type: string
              example: "FAKE"
            temperature:
              type: number
              example: 0
            maxTokens:
              type: number
              example: 256
            domain:
              type: string
              example: "FLIGHT"
            prompt:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/RoleUserAgent"
                  - $ref: "#/components/schemas/PersonaUserAgent"
                  - $ref: "#/components/schemas/ConversationStrategyUserAgent"
            goal:
              type: string
              example: "657f2a8b8f82c4cd43c674f7"
            temporary:
              type: boolean
              example: true
            _id:
              type: string
              example: "657eeee34f42a1492882807e"
            createdAt:
              type: string
              example: "2023-12-17T12:51:47.882Z"
            updatedAt:
              type: string
              example: "2023-12-17T12:51:47.882Z"
            __v:
              type: number
              example: 0
        serviceAgent:
          type: object
          properties:
            name:
              type: string
              example: "TEST SERVICE AGENT"
            type:
              type: string
              example: "SERVICE"
            llm:
              type: string
              example: "FAKE"
            temperature:
              type: number
              example: 0
            maxTokens:
              type: number
              example: 256
            domain:
              type: string
              example: "FLIGHT"
            prompt:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/WelcomeMessage"
                  - $ref: "#/components/schemas/RoleServiceAgent"
                  - $ref: "#/components/schemas/PersonaUserAgent"
                  - $ref: "#/components/schemas/ConversationStrategyUserAgent"
                  - $ref: "#/components/schemas/TasksServiceAgent"
                  - $ref: "#/components/schemas/ToolsServiceAgent"
            temporary:
              type: boolean
              example: true
            _id:
              type: string
              example: "657eeee34f42a1492882807c"
            createdAt:
              type: string
              example: "2023-12-17T12:51:47.875Z"
            updatedAt:
              type: string
              example: "2023-12-17T12:51:47.875Z"
            __v:
              type: number
              example: 0
        conversations:
          type: array
          items:
            type: string
          example: []
        status:
          type: string
          example: "RUNNING"
        optimization:
          type: object
          example: null
        duration:
          type: number
          example: 0
        totalNumberOfInteractions:
          type: number
          example: 0
        _id:
          type: string
          example: "657eeee34f42a14928828080"
        createdAt:
          type: string
          example: "2023-12-17T12:51:47.886Z"
        updatedAt:
          type: string
          example: "2023-12-17T12:51:47.886Z"
        __v:
          type: number
          example: 0
    ChatResponse:
      type: object
      properties:
        _id:
          type: string
          example: "657f2a8b8f82c4cd43c674f7"
        conversations:
          type: array
          items:
            type: string
            example: "657f2a8b8f82c4cd43c674fa"
        optimization:
          type: object
          example: null
        duration:
          type: number
          example: 0
        totalNumberOfInteractions:
          type: number
          example: 1
        name:
          type: string
          example: "Chat 3"
        status:
          type: string
          example: "RUNNING"
        type:
          type: string
          example: "CHAT"
        serviceAgent:
          type: string
          example: "657f2a8b8f82c4cd43c674f8"
        createdAt:
          type: string
          example: "2023-12-17T17:06:19.025Z"
        updatedAt:
          type: string
          example: "2023-12-17T17:06:19.051Z"
        __v:
          type: number
          example: 0
    OptimizationRequest:
      type: object
      properties:
        type:
          type: string
          example: "OPTIMIZATION"
        name:
          type: string
          example: "GENERATED3"
        description:
          type: string
          example: "Optimized simulation"
        numConversations:
          type: number
          example: 1
        serviceAgentConfig:
          type: object
          properties:
            name:
              type: string
              example: "TEST SERVICE AGENT"
            domain:
              type: string
              example: "FLIGHT"
            type:
              type: string
              example: "SERVICE"
            llm:
              type: string
              example: "FAKE"
            temperature:
              type: number
              example: 0
            maxTokens:
              type: number
              example: 256
            prompt:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/WelcomeMessage"
                  - $ref: "#/components/schemas/RoleServiceAgent"
                  - $ref: "#/components/schemas/PersonaUserAgent"
                  - $ref: "#/components/schemas/ConversationStrategyUserAgent"
                  - $ref: "#/components/schemas/TasksServiceAgent"
                  - $ref: "#/components/schemas/ToolsServiceAgent"
        userAgentConfig:
          type: object
          properties:
            domain:
              type: string
              example: "FLIGHT"
            name:
              type: string
              example: "TEST USER AGENT"
            type:
              type: string
              example: "USER"
            llm:
              type: string
              example: "FAKE"
            temperature:
              type: number
              example: 0
            maxTokens:
              type: number
              example: 256
            prompt:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/RoleUserAgent"
                  - $ref: "#/components/schemas/PersonaUserAgent"
                  - $ref: "#/components/schemas/ConversationStrategyUserAgent"
            goal:
              type: string
              example: "657f2a8b8f82c4cd43c674f7"
    ABSimulationRequest:
      type: object
      properties:
        name:
          type: string
          example: "AB"
        description:
          type: string
          example: "AB TESTING"
        numConversations:
          type: number
          example: 1
        serviceAgentAConfig:
          type: object
          properties:
            name:
              type: string
              example: "Temp service agent"
            domain:
              type: string
              example: "FLIGHT"
            type:
              type: string
              example: "SERVICE"
            llm:
              type: string
              example: "FAKE"
            temperature:
              type: number
              example: 0
            maxTokens:
              type: number
              example: 256
            prompt:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/WelcomeMessage"
                  - $ref: "#/components/schemas/RoleServiceAgent"
                  - $ref: "#/components/schemas/PersonaUserAgent"
                  - $ref: "#/components/schemas/ConversationStrategyUserAgent"
                  - $ref: "#/components/schemas/TasksServiceAgent"
                  - $ref: "#/components/schemas/ToolsServiceAgent"
        serviceAgentBConfig:
          type: object
          properties:
            name:
              type: string
              example: "Temp service agent"
            domain:
              type: string
              example: "FLIGHT"
            type:
              type: string
              example: "SERVICE"
            llm:
              type: string
              example: "FAKE"
            temperature:
              type: number
              example: 0
            maxTokens:
              type: number
              example: 256
            prompt:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/WelcomeMessage"
                  - $ref: "#/components/schemas/RoleServiceAgent"
                  - $ref: "#/components/schemas/PersonaUserAgent"
                  - $ref: "#/components/schemas/ConversationStrategyUserAgent"
                  - $ref: "#/components/schemas/TasksServiceAgent"
                  - $ref: "#/components/schemas/ToolsServiceAgent"
        userAgentConfig:
          type: object
          properties:
            name:
              type: string
              example: "Temp user agent"
            domain:
              type: string
              example: "FLIGHT"
            type:
              type: string
              example: "USER"
            llm:
              type: string
              example: "FAKE"
            temperature:
              type: number
              example: 0
            maxTokens:
              type: number
              example: 256
            prompt:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/RoleUserAgent"
                  - $ref: "#/components/schemas/PersonaUserAgent"
                  - $ref: "#/components/schemas/ConversationStrategyUserAgent"
            goal:
              type: string
              example: "657f2a8b8f82c4cd43c674f7"
    DashboardSimulation:
      type: object
      properties:
        _id:
          type: string
          example: "657dc923c9719207ba80b496"
        name:
          type: string
          example: "3"
        createdAt:
          type: string
          format: date-time
          example: "2023-12-16T15:58:27.970Z"
        successRate:
          type: number
          example: 0.8996585185185185
        domain:
          type: string
          example: "FLIGHT"
    GoalRequest:
      type: object
      properties:
        name:
          type: string
          example: "Goal 1"
        description:
          type: string
          example: "Goal 1 description"
        scenarios:
          type: array
          items:
            type: string
          example: [SLOT_FILLING, SEQUENCE]
    GoalDocument:
      type: object
      properties:
        _id:
          type: string
          example: "657f2a8b8f82c4cd43c674f7"
        name:
          type: string
          example: "Goal 1"
        description:
          type: string
          example: "Goal 1 description"
        scenarios:
          type: array
          items:
            type: string
          example: [SLOT_FILLING, SEQUENCE]
        createdAt:
          type: string
          example: "2023-12-17T17:06:19.025Z"
        updatedAt:
          type: string
          example: "2023-12-17T17:06:19.051Z"
        __v:
          type: number
          example: 0
    WelcomeMessage:
      type: object
      properties:
        name:
          type: string
          example: "welcomeMessage"
        content:
          type: string
          example: "Hello, I'm an agent from KronosJet. How can I help you?"
    RoleServiceAgent:
      type: object
      properties:
        name:
          type: string
          example: "role"
        content:
          type: string
          example: "You are a customer support agent representing KronosJet, an airline company.\nYour primary objective is to assist users in different tasks.\nYou must only help in tasks listed below.\nOnly provide information based on these instructions or from the data received from tools.\n"
    RoleUserAgent:
      type: object
      properties:
        name:
          type: string
          example: "role"
        content:
          type: string
          example: "You are a human calling a call center trying to change your flight booking.\n"
    PersonaServiceAgent:
      type: object
      properties:
        name:
          type: string
          example: "persona"
        content:
          type: string
          example: "- You should be empathetic, helpful, comprehensive and polite.\n- Never user gender specific prefixes like Mr. or Mrs. when addressing the user unless they used it themselves.\n"
    PersonaUserAgent:
      type: object
      properties:
        name:
          type: string
          example: "persona"
        content:
          type: string
          example: "- You provide all the necessary information at once, very concisely, in the shortest form possible.\n- Never repeat the same information twice unless explicitly asked."
    ConversationStrategyServiceAgent:
      type: object
      properties:
        name:
          type: string
          example: "conversationStrategy"
        content:
          type: string
          example: "- User confirmation doesn't need to be explicitly say confirmed. It is a sufficient confirmation if the users answer is clearly implies approval of change.\n"
    ConversationStrategyUserAgent:
      type: object
      properties:
        name:
          type: string
          example: "conversationStrategy"
        content:
          type: string
          example: "- Your primary objective is to change your existing booking.\n- Your booking number is PARL0A.\n- Your name is Claudio Diniz.\n- Your flight date for your booking is November, 12th, 2023. at 11 am.\n- Your flight is from New York to Boston.\n- Your booking is for 3 people.\n- You want to change it to November 17, 18, or 19, ideally 2 pm but any time is fine.\n- Generate your responses in a realistic way to a phone conversation.\n- Include common voice-to-text transcription errors in the text.\n- When you successfully changed your booking return { \"action\": \"message_to_user\", \"action_input\": \"/hangup\"}\n"
    TasksServiceAgent:
      type: object
      properties:
        name:
          type: string
          example: "tasks"
        content:
          type: string
          example: "{\"answerFromFaq\":\"- If the user has a generic question answer it using FAQ.\\n- If the user has multiple questions you must query the FAQ for each question separately. Never include multiple questions in a single query.\\n- When querying the FAQ rephrase the user's question based on context from the conversation history and make it generic so it can be found in an FAQ. \\n- All other cases refer the user to kronosjet.com\",\"changeFlightDate\":\"In order to change flight date of an existing booking you need to ensure the following steps are followed:\\n- Retrieve the user's last name and the booking number from the user.\\n- You need to authenticate the user\\n- Retrieve the booking details\\n- Confirm with the user if the retrieved booking details are correct\\n- Get the new date from the user\\n- Check if the booking can be changed to a new date\\n- If there are multiple available flights ask the user which flight they prefer \\n- When listing flight options only list the with the departure time and DO NOT include more details like flight number, arrival time, etc.\\n- If there are more than 3 flights available to choose from then don't list all options but ask the user to narrow down the options\\n- If the booking can be changed, always ask the user for a final confirmation before changing the booking\\n- For confirmation of new flight always include flight number,  departure city, arrival city, departure time, arrival time, number of passengers.\",\"searchFlights\":\"If a user just wants to know if there are any flights on a date from his departure, to his arrival city.\\n    You can use getAllFlights, to get a list of all flights, and then notify the user of possible flights that are in this list and have the right data.\"}"
    ToolsServiceAgent:
      type: object
      properties:
        name:
          type: string
          example: "tools"
        content:
          type: string
          example: "{ \"auth\": \"Authenticates a user\", \"bookingInfo\": \"Retrieves booking details\", \"checkAvailability\": \"Returns a list of available flight for a given new date for which an existing booking can be changed.\", \"getAllFlights\": \"Get a list of all Flights.\", \"changeFlightDate\": \"Used to modify an existing booking with a new flight date. The new date parameter must be in yyyy-mm-dd format but should not be disclosed to the user.\", \"getAnswerFromFaq\": \"Get an answer from the FAQ for a question of the user.\", \"escalateToAgent\": \"Escalate to human agent if the user request is failing or the user is specifically asking for a human agent.\\nEscalate immediately, you don't need to authenticate the user before transferring to an agent.\\nDont't forget to provide user_intent and data_collected.\\n\", \"routeToNewFlightBooking\": \"Route to new flight booking system if the user wants to book a new flight.\", \"routeToBookingChange\": \"Route to flight booking change system if the user wants to amend a booking beyond the task you supports (eg. upgrade to business class, change seats, add luggage etc.).\\nYou must  follow these steps first before the routing::\\n- Retrieve the user's last name and the booking number from the user.\\n- You need to authenticate the user\\n- Retrieve the booking details\\n- Confirm with the user if the retrieved booking details are correct\\n- Include the booking details retrieved in the entities_collected.\\n- If the user can't provide booking details or you fail to retrieve booking details after multiple clarification attempts then offer to transfer to an agent.\\n\" }"
        